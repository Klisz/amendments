plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    neoForge {
        //platformPackage = "forge"
    }
}


loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}


processResources {
    filesMatching(['META-INF/neoforge.mods.toml', 'pack.mcmeta', 'update.json']) {
        expand rootProject.ext.replaceProperties + [project: project]
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = "neoforge"
    atAccessWideners.add("${rootProject.mod_id}.accesswidener") // this is a path inside the mod jar
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }

    archiveClassifier = "neoforge-sources"
}

remapSourcesJar{
    archiveClassifier = "neoforge-sources"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
    }
}


// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    //forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    neoForge "net.neoforged:neoforge:${neo_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }

    modImplementation("net.mehvahdjukaar:moonlight-neoforge:${moonlight_version}")

    modCompileOnly("curse.maven:supplementaries-412082:5458843")

    modCompileOnly ("maven.modrinth:sodium:mc1.21-0.6.0-beta.2-neoforge")
    modImplementation("curse.maven:farmers-delight-398521:5566383")
    modCompileOnly("curse.maven:supplementaries-squared-838411:5130385")
    modCompileOnly("curse.maven:lucent-493280:4951434")
   // modCompileOnly("curse.maven:embeddium-908741:5321172")
    modCompileOnly("curse.maven:farmers-delight-398521:5051242")
    modImplementation("curse.maven:etched-491890:5998004")
    modCompileOnly("curse.maven:quark-243121:5594847")
    modCompileOnly("curse.maven:zeta-968868:5597406")
    modImplementation("curse.maven:blueprint-382216:6329107")
    modCompileOnly ("curse.maven:configured-457570:5101367")
    modCompileOnly ("curse.maven:rats-323596:4802123")
    modCompileOnly("curse.maven:skinned-lanterns-414154:4656953")
    modCompileOnly("curse.maven:spelunkery-790530:5043883")
    modCompileOnly("curse.maven:scholar-961802:5214379")
    modCompileOnly("curse.maven:map-atlases-forge-519759:5307805")
    modCompileOnly("it.crystalnest:soul-fire-d-fabric:$minecraft_min_version-$soul_fire_d_version")
    modCompileOnly("curse.maven:puzzles-lib-495476:5330447")
    modCompileOnly("curse.maven:new-thin-air-878379:5068247")
    modCompileOnly("com.jozufozu.flywheel:flywheel-forge-${flywheel_version}")
    modCompileOnly ("maven.modrinth:dye-depot:1.0.0-forge")
    modCompileOnly("curse.maven:alexs-caves-924854:4806837")
    modCompileOnly("curse.maven:citadel-331936:4786380")

    implementation 'org.jetbrains:annotations:22.0.0'


}
